/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Prueba_Est.java
 *
 * Created on 31/08/2011, 10:42:27 AM
 */

 /*
 * Autores:
 * Luis Alfonso Velez Santos
 * Carlos Yesid Hernandez Herrera
 * Jose Esteban Betin Diaz
 */
package Vista;

import java.awt.Color;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import  numeros.pruebas.*;

public class JPanelPrueba_Est extends javax.swing.JPanel {
    ArrayList<Float> numeros ;
    /** Creates new form Prueba_Est */
    public JPanelPrueba_Est() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jCheckBoxPrueba1 = new javax.swing.JCheckBox();
        jCheckBoxPrueba3 = new javax.swing.JCheckBox();
        jCheckBoxPrueba2 = new javax.swing.JCheckBox();
        jComboBoxPrueba1 = new javax.swing.JComboBox();
        jComboBoxPrueba2 = new javax.swing.JComboBox();
        jComboBoxPrueba3 = new javax.swing.JComboBox();
        jSeparator2 = new javax.swing.JSeparator();
        jButtonRealizarPrueba = new javax.swing.JButton();
        jPanelPrueba1 = new javax.swing.JPanel();
        jPanelPrueba2 = new javax.swing.JPanel();
        jPanelPrueba3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        jPanel1.setMinimumSize(new java.awt.Dimension(600, 400));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jLabel1.setText("Pruebas Estadisticas");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 12));
        jLabel2.setText("Seleccionar Pruebas:");

        jCheckBoxPrueba1.setFont(new java.awt.Font("Times New Roman", 0, 12));
        jCheckBoxPrueba1.setSelected(true);
        jCheckBoxPrueba1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxPrueba1StateChanged(evt);
            }
        });
        jCheckBoxPrueba1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxPrueba1ActionPerformed(evt);
            }
        });

        jCheckBoxPrueba3.setFont(new java.awt.Font("Times New Roman", 0, 12));
        jCheckBoxPrueba3.setSelected(true);
        jCheckBoxPrueba3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxPrueba3StateChanged(evt);
            }
        });
        jCheckBoxPrueba3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxPrueba3ActionPerformed(evt);
            }
        });

        jCheckBoxPrueba2.setFont(new java.awt.Font("Times New Roman", 0, 12));
        jCheckBoxPrueba2.setSelected(true);
        jCheckBoxPrueba2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxPrueba2StateChanged(evt);
            }
        });

        jComboBoxPrueba1.setMaximumRowCount(5);
        jComboBoxPrueba1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Promedios", "Distancias", "Frecuencia", "Series", "Poker", "Corridas", "Kolmogorov", "Corridas 2" }));
        jComboBoxPrueba1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPrueba1ActionPerformed(evt);
            }
        });

        jComboBoxPrueba2.setMaximumRowCount(5);
        jComboBoxPrueba2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Promedios", "Distancias", "Frecuencia", "Series", "Poker", "Corridas", "Kolmogorov", "Corridas 2" }));
        jComboBoxPrueba2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPrueba2ActionPerformed(evt);
            }
        });

        jComboBoxPrueba3.setMaximumRowCount(5);
        jComboBoxPrueba3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Promedios", "Distancias", "Frecuencia", "Series", "Poker", "Corridas", "Kolmogorov", "Corridas 2" }));
        jComboBoxPrueba3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPrueba3ActionPerformed(evt);
            }
        });

        jSeparator2.setMinimumSize(new java.awt.Dimension(600, 400));

        jButtonRealizarPrueba.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jButtonRealizarPrueba.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/iconos/1317344174_play.png"))); // NOI18N
        jButtonRealizarPrueba.setToolTipText("Iniciar pruebas");
        jButtonRealizarPrueba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRealizarPruebaActionPerformed(evt);
            }
        });

        jPanelPrueba1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanelPrueba1.setToolTipText("Si Este elemento esta en verdes\nsignifica que los numeros pueden ser \naceptados, pero si se encuentra en rojo\nno pueden ser aceptados");

        javax.swing.GroupLayout jPanelPrueba1Layout = new javax.swing.GroupLayout(jPanelPrueba1);
        jPanelPrueba1.setLayout(jPanelPrueba1Layout);
        jPanelPrueba1Layout.setHorizontalGroup(
            jPanelPrueba1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 149, Short.MAX_VALUE)
        );
        jPanelPrueba1Layout.setVerticalGroup(
            jPanelPrueba1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        jPanelPrueba2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanelPrueba2.setToolTipText("Si Este elemento esta en verdes significa que los numeros pueden ser  aceptados, pero si se encuentra en rojo no pueden ser aceptados");

        javax.swing.GroupLayout jPanelPrueba2Layout = new javax.swing.GroupLayout(jPanelPrueba2);
        jPanelPrueba2.setLayout(jPanelPrueba2Layout);
        jPanelPrueba2Layout.setHorizontalGroup(
            jPanelPrueba2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 149, Short.MAX_VALUE)
        );
        jPanelPrueba2Layout.setVerticalGroup(
            jPanelPrueba2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        jPanelPrueba3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanelPrueba3.setToolTipText("Si Este elemento esta en verdes significa que los numeros pueden ser  aceptados, pero si se encuentra en rojo no pueden ser aceptados");

        javax.swing.GroupLayout jPanelPrueba3Layout = new javax.swing.GroupLayout(jPanelPrueba3);
        jPanelPrueba3.setLayout(jPanelPrueba3Layout);
        jPanelPrueba3Layout.setHorizontalGroup(
            jPanelPrueba3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 149, Short.MAX_VALUE)
        );
        jPanelPrueba3Layout.setVerticalGroup(
            jPanelPrueba3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButtonRealizarPrueba, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jCheckBoxPrueba2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jComboBoxPrueba2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jCheckBoxPrueba1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jComboBoxPrueba1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jCheckBoxPrueba3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jComboBoxPrueba3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jPanelPrueba2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanelPrueba1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanelPrueba3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(55, 55, 55)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10))
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(jLabel1)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonRealizarPrueba, jComboBoxPrueba1, jComboBoxPrueba2, jComboBoxPrueba3});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxPrueba1)
                            .addComponent(jPanelPrueba1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBoxPrueba1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanelPrueba2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCheckBoxPrueba2)
                            .addComponent(jComboBoxPrueba2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxPrueba3)
                            .addComponent(jPanelPrueba3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxPrueba3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonRealizarPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jCheckBoxPrueba1, jCheckBoxPrueba2, jCheckBoxPrueba3, jComboBoxPrueba1, jComboBoxPrueba2, jComboBoxPrueba3, jPanelPrueba1, jPanelPrueba2, jPanelPrueba3});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxPrueba1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxPrueba1ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jCheckBoxPrueba1ActionPerformed

    private void jCheckBoxPrueba3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxPrueba3ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jCheckBoxPrueba3ActionPerformed

    private void jComboBoxPrueba1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPrueba1ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jComboBoxPrueba1ActionPerformed

    private void jComboBoxPrueba2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPrueba2ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jComboBoxPrueba2ActionPerformed

    private void jComboBoxPrueba3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPrueba3ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jComboBoxPrueba3ActionPerformed

    private void jButtonRealizarPruebaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRealizarPruebaActionPerformed
        
        int n = numeros.size();
        double vector[]=new double[n];
        for(int i=0;i<n;i++){
            vector[i]= numeros.get(i);
        }
        //Prueba 1
        if(jCheckBoxPrueba1.isSelected()){
            boolean W=false;
            switch(jComboBoxPrueba1.getSelectedIndex()){
                case 0:{
                    Prueba_Promedios p = new Prueba_Promedios();
                    W = p.getpromedios(vector, 1.96, n);
                    break;
                }
                case 1:{
                     Prueba_Distancias p = new Prueba_Distancias();
                     W = p.getdistancias(vector, 5, 0.05, n);
                    break;
                }
                case 2:{
                     Prueba_Frecuencia f= new Prueba_Frecuencia();
                     W =f.getfrecuencias(vector, 6, 0.05, n);
                    break;
                }
                case 3:{
                     Prueba_Series p = new Prueba_Series();
                     W= p.getseries(vector, 5, 0.05, n);
                    break;
                }
                case 4:{
                     Prueba_Poker p = new Prueba_Poker();
                     W = p.getpoker(vector, 5, 0.05, n);
                    break;
                }
                case 5:{
                     Prueba_Corridas p = new Prueba_Corridas();
                     W=p.getcorridas(vector, 5, 0.05, n);
                    break;
                }
                case 6:{
                     Prueba_Kolmogorov p = new Prueba_Kolmogorov();
                     W = p.getkolmogorov(vector, 1.96, n);
                    break;
                }
                case 7:{
                     Prueba_corridas2 p = new Prueba_corridas2();
                     W = p.getcorridas_p(vector, 5, 0.05, n);
                    break;
                }
        }
        if(W==true){
    //        JOptionPane.showMessageDialog(null, "Los Numeros Pseudoaleatorios provienen de una " +
    //                    "\ndistribucion uniforme, por lo tanto no puede ser rechazados..");
                        jPanelPrueba1.setBackground(Color.green);
        }
        else{
    //            JOptionPane.showMessageDialog(null, "Los Numeros Pseudoaleatorios NO provienen de una " +
    //                    "\ndistribucion uniforme, por lo tanto son rechazados..");
                        jPanelPrueba1.setBackground(Color.red);
        }
        }
        //Prueba 2

        if(jCheckBoxPrueba2.isSelected()){
            boolean W=false;
            switch(jComboBoxPrueba2.getSelectedIndex()){
                case 0:{
                    Prueba_Promedios p = new Prueba_Promedios();
                    W = p.getpromedios(vector, 1.96, n);
                    break;
                }
                case 1:{
                     Prueba_Distancias p = new Prueba_Distancias();
                     W = p.getdistancias(vector, 5, 0.05, n);
                    break;
                }
                case 2:{
                     Prueba_Frecuencia f= new Prueba_Frecuencia();
                     W =f.getfrecuencias(vector, 6, 0.05, n);
                    break;
                }
                case 3:{
                     Prueba_Series p = new Prueba_Series();
                     W= p.getseries(vector, 5, 0.05, n);
                    break;
                }
                case 4:{
                     Prueba_Poker p = new Prueba_Poker();
                     W = p.getpoker(vector, 5, 0.05, n);
                    break;
                }
                case 5:{
                     Prueba_Corridas p = new Prueba_Corridas();
                     W=p.getcorridas(vector, 5, 0.05, n);
                    break;
                }
                case 6:{
                     Prueba_Kolmogorov p = new Prueba_Kolmogorov();
                     W = p.getkolmogorov(vector, 1.96, n);
                    break;
                }
                case 7:{
                     Prueba_corridas2 p = new Prueba_corridas2();
                     W = p.getcorridas_p(vector, 5, 0.05, n);
                    break;
                }
        }
        if(W==true){
    //        JOptionPane.showMessageDialog(null, "Los Numeros Pseudoaleatorios provienen de una " +
    //                    "\ndistribucion uniforme, por lo tanto no puede ser rechazados..");
                        jPanelPrueba2.setBackground(Color.green);
        }
        else{
    //            JOptionPane.showMessageDialog(null, "Los Numeros Pseudoaleatorios NO provienen de una " +
    //                    "\ndistribucion uniforme, por lo tanto son rechazados..");
                        jPanelPrueba2.setBackground(Color.red);
        }
        }

        //Prueba 3
        if(jCheckBoxPrueba3.isSelected()){
            boolean W=false;
            switch(jComboBoxPrueba3.getSelectedIndex()){
                case 0:{
                    Prueba_Promedios p = new Prueba_Promedios();
                    W = p.getpromedios(vector, 1.96, n);
                    break;
                }
                case 1:{
                     Prueba_Distancias p = new Prueba_Distancias();
                     W = p.getdistancias(vector, 5, 0.05, n);
                    break;
                }
                case 2:{
                     Prueba_Frecuencia f= new Prueba_Frecuencia();
                     W =f.getfrecuencias(vector, 6, 0.05, n);
                    break;
                }
                case 3:{
                     Prueba_Series p = new Prueba_Series();
                     W= p.getseries(vector, 5, 0.05, n);
                    break;
                }
                case 4:{
                     Prueba_Poker p = new Prueba_Poker();
                     W = p.getpoker(vector, 5, 0.05, n);
                    break;
                }
                case 5:{
                     Prueba_Corridas p = new Prueba_Corridas();
                     W=p.getcorridas(vector, 5, 0.05, n);
                    break;
                }
                case 6:{
                     Prueba_Kolmogorov p = new Prueba_Kolmogorov();
                     W = p.getkolmogorov(vector, 1.96, n);
                    break;
                }
                case 7:{
                     Prueba_corridas2 p = new Prueba_corridas2();
                     W = p.getcorridas_p(vector, 5, 0.05, n);
                    break;
                }
        }
        if(W==true){
    //        JOptionPane.showMessageDialog(null, "Los Numeros Pseudoaleatorios provienen de una " +
    //                    "\ndistribucion uniforme, por lo tanto no puede ser rechazados..");
                        jPanelPrueba3.setBackground(Color.green);
        }
        else{
    //            JOptionPane.showMessageDialog(null, "Los Numeros Pseudoaleatorios NO provienen de una " +
    //                    "\ndistribucion uniforme, por lo tanto son rechazados..");
                        jPanelPrueba3.setBackground(Color.red);
        }
        }
    }//GEN-LAST:event_jButtonRealizarPruebaActionPerformed

    private void jCheckBoxPrueba1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBoxPrueba1StateChanged
        if(jCheckBoxPrueba1.isSelected()){
            jComboBoxPrueba1.setEnabled(true);
        }else{
            jComboBoxPrueba1.setEnabled(false);
            jPanelPrueba1.setBackground(Color.gray);
        }
    }//GEN-LAST:event_jCheckBoxPrueba1StateChanged

    private void jCheckBoxPrueba2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBoxPrueba2StateChanged
        if(jCheckBoxPrueba2.isSelected()){
            jComboBoxPrueba2.setEnabled(true);
        }else{
            jComboBoxPrueba2.setEnabled(false);
            jPanelPrueba2.setBackground(Color.gray);
        }
    }//GEN-LAST:event_jCheckBoxPrueba2StateChanged

    private void jCheckBoxPrueba3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBoxPrueba3StateChanged
        if(jCheckBoxPrueba3.isSelected()){
            jComboBoxPrueba3.setEnabled(true);
        }else{
            jComboBoxPrueba3.setEnabled(false);
            jPanelPrueba3.setBackground(Color.gray);
        }
    }//GEN-LAST:event_jCheckBoxPrueba3StateChanged

    public void llenarLista(){
        if(!numeros.isEmpty()){
            DefaultListModel lm = new DefaultListModel();

            jList1.setModel(lm);
            for(int i=0;i<numeros.size();i++){
                lm.addElement((i+1)+": "+numeros.get(i));
            }
            jList1.setModel(lm);
        }else{
            System.out.println("Error");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonRealizarPrueba;
    private javax.swing.JCheckBox jCheckBoxPrueba1;
    private javax.swing.JCheckBox jCheckBoxPrueba2;
    private javax.swing.JCheckBox jCheckBoxPrueba3;
    private javax.swing.JComboBox jComboBoxPrueba1;
    private javax.swing.JComboBox jComboBoxPrueba2;
    private javax.swing.JComboBox jComboBoxPrueba3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelPrueba1;
    private javax.swing.JPanel jPanelPrueba2;
    private javax.swing.JPanel jPanelPrueba3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables

    void setNumeros(ArrayList<Float> numeros) {
        this.numeros = numeros;
    }

}
